{
  "info": {
    "name": "Microblog API - Demo (MicroblogApplication)",
    "description": "Collection para demonstrar criar usuários, criar posts, curtir, listar e descurtir. Use com a aplicação rodando em http://localhost:8080",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080"
    }
  ],
  "item": [
    {
      "name": "1 - Criar usuário Alice",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/usuarios",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "usuarios"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": "{\"nome\": \"Alice Silva\", \"username\": \"alice\"}"
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 201 || pm.response.code === 200) {",
              "  var json = pm.response.json();",
              "  if (json.id) { pm.collectionVariables.set('user1Id', json.id); }",
              "  else { console.log('Resposta sem id para user1'); }",
              "} else { console.log('Resposta inesperada ao criar user1:', pm.response.code); }"
            ]
          }
        }
      ]
    },
    {
      "name": "2 - Criar usuário Bruno",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/usuarios",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "usuarios"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": "{\"nome\": \"Bruno Costa\", \"username\": \"bruno\"}"
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 201 || pm.response.code === 200) {",
              "  var json = pm.response.json();",
              "  if (json.id) { pm.collectionVariables.set('user2Id', json.id); }",
              "  else { console.log('Resposta sem id para user2'); }",
              "} else { console.log('Resposta inesperada ao criar user2:', pm.response.code); }"
            ]
          }
        }
      ]
    },
    {
      "name": "3 - Criar post (Alice)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/posts",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "posts"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": "{\"conteudo\": \"Olá mundo! Esse é meu primeiro post.\", \"usuarioId\": \"{{user1Id}}\"}"
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 201 || pm.response.code === 200) {",
              "  var json = pm.response.json();",
              "  if (json.id) { pm.collectionVariables.set('post1Id', json.id); }",
              "  else { console.log('Resposta sem id para post1'); }",
              "} else { console.log('Resposta inesperada ao criar post1:', pm.response.code); }"
            ]
          }
        }
      ]
    },
    {
      "name": "4 - Criar post (Bruno)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/posts",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "posts"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": "{\"conteudo\": \"Bom dia, pessoal!\", \"usuarioId\": \"{{user2Id}}\"}"
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 201 || pm.response.code === 200) {",
              "  var json = pm.response.json();",
              "  if (json.id) { pm.collectionVariables.set('post2Id', json.id); }",
              "  else { console.log('Resposta sem id para post2'); }",
              "} else { console.log('Resposta inesperada ao criar post2:', pm.response.code); }"
            ]
          }
        }
      ]
    },
    {
      "name": "5 - Curtir post1 por Bruno",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/posts/{{post1Id}}/curtir/{{user2Id}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "posts",
            "{{post1Id}}",
            "curtir",
            "{{user2Id}}"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": ""
        }
      }
    },
    {
      "name": "6 - Tentar curtir post1 novamente por Bruno (deve ser idempotente/ignorado)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/posts/{{post1Id}}/curtir/{{user2Id}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "posts",
            "{{post1Id}}",
            "curtir",
            "{{user2Id}}"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": ""
        }
      }
    },
    {
      "name": "7 - Listar posts por relevância (mais curtidos)",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/posts/relevancia",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "posts",
            "relevancia"
          ]
        }
      }
    },
    {
      "name": "8 - Listar posts cronológico (mais recentes primeiro)",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/posts/cronologico",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "posts",
            "cronologico"
          ]
        }
      }
    },
    {
      "name": "9 - Remover curtida (Bruno no post1)",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/posts/{{post1Id}}/curtir/{{user2Id}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "posts",
            "{{post1Id}}",
            "curtir",
            "{{user2Id}}"
          ]
        }
      }
    },
    {
      "name": "10 - Listar posts por relevância (após descurtir)",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/posts/relevancia",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "posts",
            "relevancia"
          ]
        }
      }
    }
  ]
}